name: Nightly MyGet Package Deploy

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    steps:
      - name: Setup .Net 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Setup .Net 7.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - uses: actions/checkout@v3
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.15
      - run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
      - name: Restore with .Net
        run: dotnet restore --nologo src
      - name: Build with .Net
        run: dotnet build --configuration Release --no-restore --nologo "-p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }}" src
      - name: Pack with .Net
        run: dotnet pack --nologo --no-build --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.gitversion.outputs.NuGetVersionV2 }} src/Daktela.HttpClient/Daktela.HttpClient.csproj
      - uses: actions/upload-artifact@v3
        with:
          name: Nuget-packages-${{ steps.gitversion.outputs.NuGetVersionV2 }}
          path: nuget-packages
      - name: Push package to Myget
        run: dotnet nuget push 'nuget-packages/*.nupkg' --api-key ${{ secrets.MYGET_API_KEY }} --source https://www.myget.org/F/daktela-http-client/api/v3/index.json
